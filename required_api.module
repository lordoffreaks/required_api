<?php
/**
 * @file
 * Allows certain user roles to be exempt from required fields
 */

/**
 * Implements hook_help().
 */
function required_api_help($path, $arg) {
  switch ($path) {

    case 'admin/help#required_api':
      $output = '';
      $output .= '<p>' . t('The Required by role module provides an easy and flexible way for developers and site builders to determine whether a field (instance) should be <em>required</em> by all users or just for selected user roles.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_menu().
 */
function required_api_menu() {
  $items = array();

  $items['admin/config/user-interface/required'] = array(
    'title' => 'Required strategy',
    'description' => 'Choose the default required strategy for fields.',
    'route_name' => 'required_api.default_plugin',
    'weight' => -20,
  );

  return $items;
}

/**
 * Implements hook_field_info_alter().
 */
function required_api_field_info_alter(&$info) {

  foreach ($info as $field_type => $field_type_info) {
    $info[$field_type]['instance_settings'] += array(
      'required_plugin' => array(),
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function required_api_form_field_ui_field_instance_edit_form_alter(&$form, $form_state) {

  $field_definition = $form_state['instance'];
  $field_name = $field_definition->getName();

  $required_api_manager = \Drupal::service('plugin.manager.required_api.required');

  $options = array(
    'plugin_id' => 'required_by_role',
    'field_definition' => $field_definition,
  );

  $plugin = $required_api_manager->getInstance($options);

  $element = $plugin->requiredFormElement($field_definition);

  $form['instance']['required'] = $element;

  // Default value needs allways to be NOT required.
  $form['instance']['default_value'][$field_name]['widget'][0]['#required'] = FALSE;
  $form['instance']['default_value'][$field_name]['widget'][0]['value']['#required'] = FALSE;

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function required_api_form_field_ui_field_edit_form_alter(&$form, $form_state) {

  $definitions = \Drupal::service('plugin.manager.required_api.required')->getDefinitions();
  $plugins = array();

  foreach ($definitions as $plugin_id => $definition) {
    $plugins[$plugin_id] = $definition['label'];
  }

  $plugin = $form['#field']->getSetting('required_plugin');

  // If wasnÂ´t set per field basic fallback to the global plugin.
  if (!$plugin) {
    $plugin = \Drupal::config('required_api.plugins')->get('default_plugin');
  }

  $form['field']['settings']['required_plugin'] = array(
    '#title' => t('Required strategy'),
    '#type' => 'radios',
    '#options' => $plugins,
    '#default_value' => $plugin,
  );

}
