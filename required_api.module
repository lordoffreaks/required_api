<?php
/**
 * @file
 * Provides an unified API to find out if a field widget should be
 * required or not based on contexts.
 */

/**
 * Implements hook_help().
 */
function required_api_help($path, $arg) {
  switch ($path) {

    case 'admin/help#required_api':
      $output = '';
      $output .= '<p>' . t('The Required API module provides an API to find out
        if a widget is requried or not.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_permission().
 */
function required_api_permission() {
  return array(
    'administer required settings' => array(
      'title' => t('Administer required settings'),
      'description' => t('Administer global required settings.'),
    ),
  );
}

/**
 * Implements hook_field_info_alter().
 */
function required_api_field_info_alter(&$info) {

  foreach ($info as $field_type => $field_type_info) {
    $info[$field_type]['instance_settings'] += array(
      'required_plugin' => NULL,
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Applies to FORM_ID field_ui_field_instance_edit_form.
 */
function required_api_form_field_ui_field_instance_edit_form_alter(&$form, $form_state) {

  $field_definition = $form_state['instance'];
  $field_name = $field_definition->getName();

  $manager = \Drupal::service('plugin.manager.required_api.required');

  if (!empty($form_state['values']['instance']['settings']['required_plugin'])) {
    $plugin_id = $form_state['values']['instance']['settings']['required_plugin'];
  }
  else {
    $plugin_id = $manager->getPluginId($field_definition);
  }

  $plugins = $manager->getDefinitionsAsOptions();

  $configuration = array(
    'plugin_id' => $plugin_id,
    'field_definition' => $field_definition,
  );

  $plugin = $manager->getInstance($configuration);

  if (count($plugins) > 1) {

    $form['instance']['required_plugin'] = array(
      '#title' => t('Choose a required strategy:'),
      '#type' => 'radios',
      '#options' => $plugins,
      '#default_value' => $plugin_id,
      '#weight' => $form['instance']['required']['#weight'] - 1,
      '#ajax' => array(
        'callback' => 'require_api_element_ajax_callback',
        'wrapper' => 'required-ajax-wrapper',
        'effect' => 'fade',
        'speed' => 'fast',
      ),
      '#parents' => array('instance', 'settings', 'required_plugin'),
    );

  }

  $form['instance']['required'] = $plugin->formElement($field_definition);

  // Default value needs allways to be NOT required.
  $form['instance']['default_value'][$field_name]['widget'][0]['#required'] = FALSE;
  $form['instance']['default_value'][$field_name]['widget'][0]['value']['#required'] = FALSE;

}

/**
 * Renders the form element to select the required property.
 *
 * @return array
 *   The rendered element.
 */
function require_api_element_ajax_callback($form, $form_state) {
  return $form['instance']['required'];
}
