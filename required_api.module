<?php

/**
 * @file
 * Allows certain user roles to be exempt from required fields
 */

/**
 * Implements hook_help().
 */
function required_api_help($path, $arg) {
  switch ($path) {

    case 'admin/help#required_api':
      $output = '';
      $output .= '<p>' . t('The Required by role module provides an easy and flexible way for developers and site builders to determine whether a field (instance) should be <em>required</em> by all users or just for selected user roles.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_field_info_alter().
 */
function required_api_field_info_alter(&$info) {

  foreach ($info as $field_type => $field_type_info) {
    $info[$field_type]['instance_settings'] += array(
      'required_api' => array(),
    );
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function required_api_form_field_ui_field_instance_edit_form_alter(&$form, $form_state) {

  $field_definition = $form_state['instance'];
  $field_name = $field_definition->getName();

  $requiredApiManager = \Drupal::service('plugin.manager.required_api.required');

  $options = array(
    'plugin_id' => 'required_by_role',
    'field_definition' => $field_definition,
  );

  $plugin = $requiredApiManager->getInstance($options);

  $element = $plugin->requiredFormElement($field_definition);

  $form['instance']['required'] = $element;

  // Default value needs allways to be NOT required.
  $form['instance']['default_value'][$field_name]['widget'][0]['#required'] = FALSE;
  $form['instance']['default_value'][$field_name]['widget'][0]['value']['#required'] = FALSE;

}
